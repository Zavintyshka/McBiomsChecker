from aiogram import Dispatcher, F
from aiogram.types import Message
from aiogram.filters import Command, CommandStart
from logger import user_logger
from db_funcs import maps_db, admin_db
from keyboardbuilder import make_reg_inline_keyboard, make_map_list_keyboard, make_advancement_list_keyboard
from check_conditions import is_user_exist, is_admin


async def create_user(msg: Message):
    tg_id = msg.from_user.id
    if is_user_exist(tg_id):
        await msg.answer(f'–í–∞—à {tg_id} —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω')
    else:
        builder = make_reg_inline_keyboard()
        await msg.answer('–í—ã–±–µ—Ä–µ—Ç–µ —è–∑—ã–∫', reply_markup=builder.as_markup())


async def map_list(msg: Message):
    tg_id = msg.from_user.id
    response = maps_db.get_map_list(tg_id)
    if not response:
        await msg.answer('–ü–æ—Ö–æ–∂–µ —É –≤–∞—Å –µ—â–µ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç üòú.\n–°–∞–º–æ–µ –≤—Ä–µ–º—è –¥–æ–±–∞–≤–∏—Ç—å –∏—Ö —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /add_map')
    else:
        builder = make_map_list_keyboard(response, 'map-list')
        await msg.answer('–í–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç:', reply_markup=builder.as_markup())


async def delete_map_menu(msg: Message):
    tg_id = msg.from_user.id
    maps = maps_db.get_map_list(tg_id)
    if maps:
        builder = make_map_list_keyboard(maps, 'delete-map')
        await msg.answer('–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ä—Ç—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è', reply_markup=builder.as_markup())
    else:
        await msg.answer('–ü–æ—Ö–æ–∂–µ —É –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∫–∞—Ä—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.')



async def delete_advancement(msg: Message):
    if is_admin(msg.from_user.id):
        records = admin_db.get_all_records()
        builder = make_advancement_list_keyboard(records)
        await msg.answer('–í—ã–±–µ—Ä–µ—Ç–µ –≤–µ—Ä—Å–∏—é –∏–≥—Ä—ã, —ç—Ç–∞–ª–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω', reply_markup=builder.as_markup())
    else:
        await msg.answer('–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π.')


async def new_user(msg: Message):
    await msg.answer('–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ adventuring time')
    await msg.answer_animation('CgACAgIAAxkBAAIEImWlDVVMAc7p_YX5YuESYKSRwWB_AAK9QAACEzooSVjNCvuQxg3JNAQ')


def register_handlers(dp: Dispatcher):
    dp.message.register(create_user, Command(commands='create_user'))
    dp.message.register(map_list, Command(commands='map_list'))
    dp.message.register(delete_map_menu, Command(commands='delete_map'))
    dp.message.register(delete_advancement, Command(commands=['delete_advancement', 'del_advancement']))
    dp.message.register(new_user, CommandStart)
